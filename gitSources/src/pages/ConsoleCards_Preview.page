<!--
/**
    Console Cards Preview
*/
-->
<apex:page controller="vlocity_cmt.CardCanvasController" docType="html-5.0" applyHtmlTag="true" showHeader="false" sidebar="false" standardStylesheets="false" extensions="LinkEnvSupport" cache="false">
        <html xmlns:ng="http://angularjs.org" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" ng-app="PreviewApp" class="ng-cloak"  style="height:100%"
         dir="{!IF(isLanguageRTL, 'rtl', 'ltr')}" lang="{!currentLang}">
        <head>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <meta http-equiv="x-ua-compatible" content="IE=edge" />
        <style type="text/css">
        
        html {
            border: solid 1px transparent;
           /* width: 100%;*/
        }
        body {
            margin: 0px !important;
            padding: 0px !important;
            background: #f9f9f9;
        }
        .spinnerMin {
            height: 100px;
        }

        </style>

    
    <apex:stylesheet value="{!URLFOR($Resource.vlocity_cmt__vlocity_assets, '/css/vlocity.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.console_Resources, '/JS/cardLink.js')}" />
    <apex:includeScript value="/support/console/38.0/integration.js" />
    
    <c:CellcomIconComponent />
    <apex:stylesheet value="{!IF(isLanguageRTL, URLFOR($Resource.vlocity_cmt__slds, '/assets/styles/salesforce-lightning-design-system-vf.rtl.min.css'), URLFOR($Resource.vlocity_cmt__slds, '/assets/styles/salesforce-lightning-design-system-vf.min.css'))}"/>

        </head>
        <body>
        <div class="vlocity via-slds" ng-app="PreviewApp" ng-controller="accountCtrl" id="startLayout">
        <!-- Sidebar layout-->
            <vloc-layout spinner="true"  ctrl="{{injectedController}}" layout-id="{{layoutId}}" layout-name="{{layoutName}}"></vloc-layout>
        </div>
        <script  type="text/javascript">
             if(!String.prototype.startsWith) {
                String.prototype.startsWith = function(searchString, position){
                  return this.substr(position || 0, searchString.length) === searchString;
          };
        }

        </script>

            <script src="{!URLFOR($Resource.vlocity_cmt__vlocity_assets, '/javascripts/vlocity.js')}"></script>
            <script src="{!URLFOR($Resource.vlocity_cmt__vlocity_assets, '/bower_components/forceng/forceng.js')}"></script>
            <script src="{!URLFOR($Resource.vlocity_cmt__vlocity_assets, '/bower_components/ForceTK/forcetk.js')}"></script>
            <script src="{!$Resource.vlocity_cmt__CardFramework_Assets}"></script>
            <script src="{!$Resource.vlocity_cmt__CardFramework}"></script>
            <script src="{!$Resource.vlocity_cmt__SldsAngular}"></script>
            <script src="{!URLFOR($Resource.console_Resources, '/JS/ngsanitize.js')}"></script>
            <script src="{!URLFOR($Resource.console_Resources, '/JS/cl-directives.js')}"></script>
 
            <script type="text/javascript">
            window.currEnvironmentAllLinks = {!urlLinkList};
            window.primaryContactId = '{!JSENCODE(primaryContactId)}';
            console.log('1111window.primaryContactId '+ window.primaryContactId);
            window.wrapUpNeeded = false;
           
            //var layoutName ='{!JSENCODE(layoutName)}';
            //console.log('layoutName',layoutName);
            var PreviewModule = angular.module('PreviewApp', ['vlocity', 'CardFramework', 'forceng', 'cfp.hotkeys','cl-directives','ngSanitize']);

            //override
            PreviewModule.factory('interactionTracking', function() {
                return {
                    getDefaultTrackingData : function() {
                        return {};
                    },
                    addInteraction: function(interaction) {
                        return null;
                    },
                    enqueueInteractions : function(interactions) {
                        return null;
                    }
                };
            });
    
    
            PreviewModule.config(['$localizableProvider', function($localizableProvider) {
                'use strict';
                $localizableProvider.setLocalizedMap(window.i18n);
                $localizableProvider.setDebugMode(window.ns === '');
            }]);
            // this is used for remoteActions config inside CardFramework
            // this is duplicated in both ConsoleSidebar.page and CardLayoutComponent.component to facilitate
            // independent testing of the left handside vs right handside of the console
            var nsPrefixDotNotation = "{!nsPrefixDotNotation}";
            console.log('nsPrefixDotNotation fetched from CardCanvasController: ' + nsPrefixDotNotation);
            localStorage.setItem('nsPrefixDotNotation', nsPrefixDotNotation);
            console.log('nsPrefixDotNotation value stored in localStorage: ' + localStorage.getItem('nsPrefixDotNotation'));
            
            PreviewModule.run([ "$sce","$rootScope", "force", "timeStampInSeconds", function($sce, $rootScope, force, timeStampInSeconds) {
            console.log('inside run');
            force.init({
                accessToken: '{!$Api.Session_ID}',
                useProxy: false
            });
            $rootScope.forcetkClient = new forcetk.Client();
            $rootScope.forcetkClient.setSessionToken('{!$Api.Session_ID}');
        }]);

        PreviewModule.controller('accountCtrl', ['$scope', '$rootScope', 'timeStampInSeconds', 'dataService', 'pageService', '$localizable', '$compile', '$window', function($scope, $rootScope, timeStampInSeconds, dataService, pageService, $localizable, $compile, $window) {
            $scope.layoutName = pageService.params.layout ? pageService.params.layout : layoutName;
            console.log('layoutName',$scope.layoutName);
            $scope.layoutId = pageService.params.layoutId;
            $rootScope.isAdminUser = ("{!isAdminUser}" == "true");
            $rootScope.isCommunityUser = ("{!InCommunity}" == "true");
            $rootScope.counterRequests = 0;
            $rootScope.layouts = {};
        }]);


         
            </script>
            <!--replaced the cellcomFlyout component-->
            <script src="{!URLFOR($Resource.console_Resources, '/JS/cellcomFlyout.js')}"></script> 
            
          
            
        </body>
    </html>
</apex:page>